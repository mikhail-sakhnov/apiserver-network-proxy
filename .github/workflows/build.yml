name: Build
on:
  push:
    branches:
      - master
      - add-image-build
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - release-*
jobs:
  images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta_server
        uses: docker/metadata-action@v3
        with:
          images: quay.io/k0sproject/apiserver-network-proxy-server 
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=pr
            type=edge,branch=master
      - name: Docker meta
        id: meta_agent
        uses: docker/metadata-action@v3
        with:
          images: quay.io/k0sproject/apiserver-network-proxy-agent 
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=pr
            type=edge,branch=master

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Quay
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PASSWORD }}
          registry: quay.io

      - name: Build agent
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./artifacts/images/agent-build.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_agent.outputs.tags }}
          labels: ${{ steps.meta_agent.outputs.labels }}


      - name: Build server
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./artifacts/images/server-build.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_server.outputs.tags }}
          labels: ${{ steps.meta_server.outputs.labels }}